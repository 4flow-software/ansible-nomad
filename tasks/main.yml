---
# File: main.yml - Main tasks for Nomad

- name: Include checks/asserts
  include: asserts.yml

- name: Include OS variables
  include_vars: "{{ ansible_os_family }}.yml"

# Gathers facts (bind address) from servers not currently targeted.
# 'delegate_facts' is currently rather buggy in Ansible so this might not
# always work. Hence 'nomad_gather_server_facts' defaults to 'no'.
- name: Gather facts from other servers
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ nomad_servers | difference(play_hosts) }}"
  ignore_errors: yes
  when: nomad_gather_server_facts | bool

- name: Expose bind_address, advertise_address and node_role as facts
  set_fact:
    nomad_bind_address: "{{ nomad_bind_address }}"
    nomad_advertise_address: "{{ nomad_advertise_address }}"
    nomad_node_role: "{{ nomad_node_role }}"

- name: Include user and group settings
  include: user_group.yml

- name: Include Docker tasks
  include: docker.yml
  when: nomad_docker_enable | bool

- name: Install OS packages
  include: install.yml

- name: Disable SELinux (RHEL)
  include: selinux.yml
  when: ansible_os_family == "RedHat"

- name: Create directories
  file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group}}"
  with_items:
    - "{{ nomad_data_dir }}"
    - "{{ nomad_config_dir }}"
    - "{{ nomad_log_dir }}"

- name: Base configuration
  template:
    src: base.hcl.j2
    dest: "{{ nomad_config_dir }}/base.hcl"

- name: Server configuration
  template:
    src: server.hcl.j2
    dest: "{{ nomad_config_dir }}/server.hcl"
  when:
    - _nomad_node_server | bool

- name: Client configuration
  template:
    src: client.hcl.j2
    dest: "{{ nomad_config_dir }}/client.hcl"
  when:
    - _nomad_node_client | bool

- name: Custom configuration
  template:
    src: custom.hcl.j2
    dest: "{{ nomad_config_dir }}/custom.hcl"
  when:
    - nomad_config_custom is defined

- name: SYSV init script
  template:
    src: nomad_sysvinit.j2
    dest: /etc/init.d/nomad
    owner: root
    group: root
    mode: 0755
  when: not ansible_service_mgr == "systemd" and not ansible_os_family == "Debian"

- name: Debian init script
  template:
    src: nomad_debian.init.j2
    dest: /etc/init.d/nomad
    owner: root
    group: root
    mode: 0755
  when: not ansible_service_mgr == "systemd" and ansible_os_family == "Debian"

- name: systemd script
  template:
    src: nomad_systemd.service.j2
    dest: /lib/systemd/system/nomad.service
    owner: root
    group: root
    mode: 644
  when: ansible_service_mgr == "systemd"

- name: Start Nomad
  service:
    name: nomad
    enabled: yes
    state: started
