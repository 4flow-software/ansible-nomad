---
# File: tasks/Debian.yml - Debian tasks for nomad

- name: OS Packages
  apt: "name={{ item }} state=present update_cache=yes"
  with_items: "{{ nomad_debian_os_packages }}"
  tags: installation

- name: Download Nomad
  become: no
  connection: local
  get_url: "url={{ nomad_zip_url }} dest={{ role_path }}/files/{{ nomad_debian_pkg }} sha256sum={{ nomad_zip_sha256 }} timeout=74"
  run_once: true
  tags: installation

- name: Unarchive Nomad
  become: no
  connection: local
  unarchive: "src={{ role_path }}/files/{{ nomad_debian_pkg }} dest={{ role_path }}/files/ creates={{ role_path }}/files/consul"
  run_once: true
  tags: installation

- name: Install Nomad
  copy: "src={{ role_path }}/files/nomad dest=/usr/local/bin/ owner={{ nomad_user }} group={{ nomad_group }} mode=0755"
  tags: installation

- name: Cleanup
  become: no
  connection: local
  file: "dest={{ role_path }}/files/nomad* state=absent"
  run_once: true
  tags: installation

## Docker Subsystem

- name: Update package cache
  apt: update_cache=yes
  when: nomad_enable_docker == "true"
  tags: docker

- name: Apt transport package
  apt: name='apt-transport-https' state=present
  when: nomad_enable_docker == "true"
  tags: docker

- name: CA certs package
  apt: name='ca-certificates' state=present
  when: nomad_enable_docker == "true"
  tags: docker

- name: HTTPS APT transport for Docker repository
  apt:
    name: apt-transport-https
    state: present
  when: nomad_enable_docker == "true"
  tags: docker

- name: Add Docker signing key
  apt_key:
    id: "{{ nomad_apt_key_sig }}"
    keyserver: "{{ nomad_apt_key_url }}"
    state: present
  register: add_repository_key
  ignore_errors: true
  tags: docker

- name: Add Docker repo and update apt cache
  apt_repository:
    repo: "{{ nomad_apt_repo }}"
    mode: '644'
    update_cache: yes
    state: present
  when: nomad_enable_docker == "true"
  tags: docker

- name: Install Docker
  apt: name='docker-engine' state=present update_cache=yes
  when: nomad_enable_docker == "true"
  tags: docker

- name: Start Docker
  service: name=docker enabled=yes state=started
  when: nomad_enable_docker == "true"
  tags: docker
